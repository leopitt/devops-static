name: Deploy static site.
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create key file
        run: |
          echo "${{ secrets.AWS_EC2_PEM }}" > /tmp/private_key
          chmod 600 /tmp/private_key
      # SSH into the EC2 instance.
      # Based on https://gist.github.com/raviagheda/c69ae5e884f4490b1af656dbd80c00dd
      # Server setup tasks to get it ready for hpsting the site.
      - name: Install EC2 instance dependencies
        run: |
          ssh -o StrictHostKeyChecking=no -i /tmp/private_key ${{ secrets.AWS_EC2_PUBLIC_USER }}@${{ secrets.AWS_EC2_PUBLIC_DNS }} << 'EOF'
            # Update packages and install curl
            sudo apt-get update
            sudo apt-get install -y ca-certificates curl

            # Create keyrings directory
            sudo install -m 0755 -d /etc/apt/keyrings

            # Add Dockerâ€™s official GPG key
            sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
            sudo chmod a+r /etc/apt/keyrings/docker.asc

            # Add Docker apt repo
            echo \
              "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
              $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
              sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

            # Install Docker
            sudo apt-get update
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

            # Install Docker Compose
            sudo apt-get install -y docker-compose

            # Update permissions so we don't have to use sudo for Docker.
            sudo usermod -aG docker $(whoami)
          
            # Create certificates.
            sudo openssl req -x509 -days 365 -newkey rsa:2048 -keyout /etc/ssl/certs/https.key -out /etc/ssl/certs/https.crt -nodes -subj "/C=GB/ST=StateName/L=CityName/O=CompanyName/OU=CompanySectionName/CN=CommonNameOrHostname"
          EOF
      - name: rsync the checked out code to EC2
        run: |
          rsync --delete --exclude ".git" -avze "ssh -i /tmp/private_key" ${{ github.workspace }} ${{ secrets.AWS_EC2_PUBLIC_USER }}@${{ secrets.AWS_EC2_PUBLIC_DNS }}:~/
      - name: Initialise the Docker containers
        run: |
          ssh -o StrictHostKeyChecking=no -i /tmp/private_key ${{ secrets.AWS_EC2_PUBLIC_USER }}@${{ secrets.AWS_EC2_PUBLIC_DNS }} << 'EOF'
            # CD to the repo directory.
            cd ~/devops-static
            # Stop, remove and purge any running Docker containers.
            docker-compose down --rmi all
            # Start the Docker containers.
            docker-compose up -d
          EOF
      - name: Clean up
        run: |
          rm /tmp/private_key
